@model Shortener_Link.DTO.CreateLinkDTO;
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Home";
    var response = ViewBag.Response;
}

@using QRCoder;
@using System.Drawing.Imaging;
@using System.Drawing;
<div id="app">
    @if (response?.Status == 409 || response?.Status == 400)
    {
        <div class="alert alert-info" role="alert">@response?.Message</div>
    }
    <h1 class="text-primary">Shorten Your Long Link</h1>
    <h2 class="text-sub">
        Linkly is an efficient and easy-to-use URL shortening service that streamlines your online
        experience.
    </h2>
    <form id="form" style="display: flex; flex-direction: column; align-items: center;" action="/" method="post">
        <div class="input-link">
            <i class="fa-solid fa-link"></i>
            <input id="input" name="OriginalLink" autofocus required type="text" placeholder="Enter the link here" tabindex="1">
            <button tabindex="3">Shorten Now!</button>
        </div>
        <div class="optional-endpoint">
            <input name="Endpoint" type="text" placeholder="Enter your optional endpoint. Example: https://localhost/your-endpoint." tabindex="2" maxlength="20" minlength="6" pattern="[a-zA-Z0-9\s]*" title="Vui lòng không nhập ký tự đặc biệt">
        </div>
    </form>

    @if (response?.Status == 200)
    {
        <div style="display: flex; justify-content: center;">
            <div class="short-link">
                <section>
                    <h3>@response?.Data.ShortedLink</h3>
                </section>
                <section>
                    <div class="coppy-icon" onclick="CoppyToClipBoard('@response?.Data.ShortedLink')">
                        <i class="fa-solid fa-copy"></i>
                    </div>
                </section>
                <section class="qr-section">
                    <div class="qr-icon">
                        <i class="fa-solid fa-qrcode"></i>
                    </div>
                    <div hidden class="qr-code">
                        @if (response?.Status == 200)
                        {
                            using (MemoryStream ms = new MemoryStream())
                            {
                                QRCodeGenerator qRCodeGenerator = new QRCodeGenerator();
                                QRCodeData qRCodeData = qRCodeGenerator.CreateQrCode(response?.Data.ShortedLink, QRCodeGenerator.ECCLevel.Q);
                                QRCode qRCode = new QRCode(qRCodeData);
                                using (Bitmap bitmap = qRCode.GetGraphic(20))
                                {
                                    bitmap.Save(ms, ImageFormat.Png);
                                }
                                <img width="100px" height="100px" src="@($"data:image/png;base64,{Convert.ToBase64String(ms.ToArray())}")" alt="QR Code">
                            }
                        }
                    </div>
                </section>
                <section>
                    <a href="@response?.Data.ShortedLink" target="_blank">Go to link</a>
                </section>
            </div>
        </div>
    }
</div>

<script>
    const inputElement = document.getElementById("input");
    const formElement = document.getElementById("form");
    const qrBtnElement = document.querySelector(".qr-icon");
    const qrcodeElement = document.querySelector(".qr-code");
    var isClick = true;

    qrBtnElement.addEventListener("click", () => {
        if (isClick) {
            qrcodeElement.hidden = false;
        } else {
            qrcodeElement.hidden = true;
        }
        isClick = !isClick;
    });

    formElement.addEventListener("submit", (e) => {
        e.preventDefault();

        var isValid = CheckUrl(inputElement.value);

        if (!isValid) {
            alert("Invalid url");
        } else {
            formElement.submit();
        }
    });

</script>

<script>
    function CoppyToClipBoard(text) {
        var textarea = document.createElement("textarea");
        textarea.value = text;
        document.body.appendChild(textarea);
        textarea.select();
        document.execCommand("copy");
        document.body.removeChild(textarea);
        alert("Coppied to clipboard");
    }

    function CheckUrl(url) {
        var urlRegex = /^(?:https?|ftp):\/\/[^\s/$.?#].[^\s]*$/i;

        let isUrl = urlRegex.test(url.trim());

        return isUrl;
    }
</script>

@if (response?.Status == 200)
{
    <script>
        var oldArr = JSON.parse(sessionStorage.getItem("list"));
        var object = {
            originalLink: '@response?.Data.OriginalLink',
            shortedLink: '@response?.Data.ShortedLink'
        };

        if (!oldArr) {
            var newArr = [object];
            sessionStorage.setItem('list', JSON.stringify(newArr));
        } else {
            oldArr.push(object);
            sessionStorage.setItem('list', JSON.stringify(oldArr));
        }
    </script>
}
